apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    dataBinding {
        enabled true
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-annotations:27.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:support-v4:27.1.0'
    implementation 'com.android.support:gridlayout-v7:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.j256.ormlite:ormlite-core:5.0'
    implementation 'com.j256.ormlite:ormlite-android:5.0'

    //本地代码库
    implementation 'com.github.linwenhui0:UtilLibary:0.0.8'
    implementation 'com.github.linwenhui0:ImageLibrary:0.0.2'
    implementation 'com.github.linwenhui0:AdapterLibrary:0.0.2'
    implementation 'com.github.linwenhui0:NetLibrary:0.0.8'
    implementation 'com.github.linwenhui0:CommonAction:0.0.3'
    implementation 'com.github.linwenhui0:WidgetLibrary:0.0.2'

//    implementation 'com.hlibrary.util:utillibrary:0.0.1-SNAPSHOT'
//    implementation 'com.hlibrary.image:imagelibrary:0.0.1-SNAPSHOT'
//    implementation 'com.hlibrary.adapter:adapterlibrary:0.0.23-SNAPSHOT'
//    implementation 'com.hlibrary.net:netlibrary:0.0.2-SNAPSHOT'
//    implementation 'com.hlibrary.action:CommonAction:0.0.4-SNAPSHOT'
//    implementation 'com.hlibrary.widget:widgetlibrary:0.0.5-SNAPSHOT'
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
uploadArchives{
    configuration = configurations.archives
    repositories{
        mavenDeployer{
            pom.groupId = GROUP
            pom.artifactId = POM_ARTIFACT_ID
            pom.version = VERSION_NAME
            repository(url: RELEASE_REPOSITORY_URL) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }
            snapshotRepository(url: SNAPSHOT_REPOSITORY_URL) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }


        }
    }
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
//        archives androidJavadocsJar
}

